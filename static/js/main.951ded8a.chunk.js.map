{"version":3,"sources":["logo.svg","Movie.js","App.js","index.js"],"names":["module","exports","Movie","title","year","image","description","className","useState","modal","setModal","toggle","src","alt","split","splice","join","Button","color","onClick","Modal","isOpen","ModalHeader","ModalBody","App","search","setSearch","query","setQuery","movies","setMovies","genre","setGenre","API_KEY","process","useEffect","queryValue","a","fetch","response","json","data","moviesWithOnlyPosters","results","filter","item","poster_path","genreValue","console","log","fetchMovies","fetchGenres","onSubmit","e","preventDefault","Container","fluid","Row","Col","xs","sm","type","placeholder","value","onChange","target","hidden","map","md","lg","key","id","release_date","overview","href","rel","Logo","require","config","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.951ded8a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.31d26327.svg\";","import React, { useState } from \"react\";\r\nimport \"./styles.css\";\r\nimport { Button, Modal, ModalHeader, ModalBody } from \"reactstrap\";\r\n\r\nfunction Movie({ title, year, image, description, className }) {\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n\r\n  const imageUrl = \"https://image.tmdb.org/t/p/w300/\";\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"movie-title-div\">\r\n        <h3>{title}</h3>\r\n      </div>\r\n\r\n      <img src={`${imageUrl}${image}`} alt=\"poster\" />\r\n\r\n      <h3>\r\n        {year &&\r\n          year\r\n            .split(\"\")\r\n            .splice(0, 4)\r\n            .join(\"\")}\r\n      </h3>\r\n\r\n      <Button color=\"danger\" onClick={toggle} className=\"description-button\">\r\n        Description\r\n      </Button>\r\n      <Modal isOpen={modal} toggle={toggle} className={className}>\r\n        <ModalHeader color=\"danger\" toggle={toggle}>\r\n          {title}\r\n        </ModalHeader>\r\n        <ModalBody>{description}</ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Movie;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./styles.css\";\r\nimport Movie from \"./Movie\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\nimport Logo from './logo.svg'\r\n\r\nfunction App() {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [query, setQuery] = useState(\"\");\r\n  const [movies, setMovies] = useState([]);\r\n  const [genre, setGenre] = useState(\"\");\r\n\r\n  const API_KEY = process.env.REACT_APP_MOVIE_API_KEY;\r\n\r\n  useEffect(() => {\r\n    async function fetchMovies(queryValue) {\r\n      if (!queryValue) {\r\n        return;\r\n      }\r\n      const response = await fetch(\r\n        `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&page=1&include_adult=false&query=${query}`\r\n      );\r\n      const data = await response.json();\r\n      const moviesWithOnlyPosters =\r\n        data.results &&\r\n        data.results.filter(item => (item.poster_path != null ? item : null));\r\n      setMovies(moviesWithOnlyPosters);\r\n    }\r\n\r\n    async function fetchGenres(genreValue) {\r\n      if (!genreValue) {\r\n        return;\r\n      }\r\n      const response = await fetch(\r\n        `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&with_genres=${genre}`\r\n      );\r\n      const data = await response.json();\r\n      console.log(data);\r\n      const moviesWithOnlyPosters =\r\n        data.results &&\r\n        data.results.filter(item => (item.poster_path != null ? item : null));\r\n      setMovies(moviesWithOnlyPosters);\r\n    }\r\n    fetchMovies(query);\r\n    fetchGenres(genre);\r\n  }, [query, genre, API_KEY]);\r\n\r\n  function updateSearch(e) {\r\n    setSearch(e.target.value);\r\n  }\r\n\r\n  function getQuery(e) {\r\n    e.preventDefault();\r\n    setQuery(search);\r\n    setSearch(\"\");\r\n  }\r\n\r\n  function handleGenreChange(e) {\r\n    setGenre(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1 className=\"app-title\">What 2 Watch</h1>\r\n      <form onSubmit={getQuery}>\r\n        <Container fluid={true}>\r\n          <Row>\r\n            <Col xs=\"12\" sm=\"6\" className=\"search-bar-col\">\r\n              <input\r\n                className=\"search-bar\"\r\n                type=\"text\"\r\n                placeholder=\"Search Title...\"\r\n                value={search}\r\n                onChange={updateSearch}\r\n              />\r\n\r\n              <button className=\"search-button\" type=\"submit\">\r\n                Search\r\n              </button>\r\n            </Col>\r\n\r\n            <Col xs=\"12\" sm=\"6\" className=\"genre-dropdown-col\">\r\n              <select\r\n                className=\"genre-dropdown\"\r\n                onChange={handleGenreChange}\r\n                value={genre}\r\n              >\r\n                <option hidden>Find by Genre</option>\r\n                <option value=\"28\">Action</option>\r\n                <option value=\"12\">Adventure</option>\r\n                <option value=\"16\">Animation</option>\r\n                <option value=\"35\">Comedy</option>\r\n                <option value=\"99\">Documentary</option>\r\n                <option value=\"14\">Fantasy</option>\r\n                <option value=\"36\">History</option>\r\n                <option value=\"27\">Horror</option>\r\n                <option value=\"9648\">Mystery</option>\r\n                <option value=\"10749\">Romance</option>\r\n                <option value=\"878\">Science Fiction</option>\r\n                <option value=\"53\">Thriller</option>\r\n                <option value=\"10752\">War</option>\r\n                <option value=\"37\">Western</option>\r\n              </select>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </form>\r\n\r\n      <Row>\r\n        {movies &&\r\n          movies.map(item => (\r\n            <Col xs=\"12\" md=\"6\" lg=\"4\" key={item.id}>\r\n              <Movie\r\n                key={item.id}\r\n                title={item.title}\r\n                year={item.release_date}\r\n                image={item.poster_path}\r\n                description={item.overview}\r\n              />\r\n            </Col>\r\n          ))}\r\n      </Row>\r\n\r\n      <footer>\r\n        <p> Powered by <a href=\"https://www.themoviedb.org/?language=en-US\" target=\"_blank\" rel=\"noopener noreferrer\"> <img src={Logo} alt=\"Powered By The Movie Database\" /></a></p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nrequire('dotenv').config();\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}